# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      # Runs a single command using the runners shell
      - name: Build Docker Image and Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/jrotter2/autodqmwebapp:latest
          cache-from: ghcr.io/jrotter2/autodqmwebapp:cache
          cache-to: ghcr.io/jrotter2/autodqmwebapp:cache
          #tags: docker.pkg.github.com/jrotter2/autodqm/autodqmwebapp:latest
          #username: ${{ github.actor }}
          #password: ${{ secrets.GITHUB_TOKEN }}
          #registry: docker.pkg.github.com
          #repository: jrotter2/AutoDQM/autodqm-webapp
          #tag_with_ref: true
  deploy:
    runs-on: ubuntu-latest
    container: gitlab-registry.cern.ch/paas-tools/openshift-client:latest
    needs: build
    steps:
      - name: Pushing to Openshift
        run: oc tag --token=${{ secrets.IMPORT_TOKEN_DEV }} --server=https://openshift.cern.ch --namespace autodqm-dev --source=docker ghcr.io/jrotter2/autodqmwebapp:latest autodqmwebapp:latest

